generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  product_id Int?
  quantity   Int       @default(1)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  products   products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(100)
  slug        String?    @unique @db.VarChar(100)
  description String?
  products    products[]
}

model coupon_usages {
  id        Int       @id @default(autoincrement())
  coupon_id Int?
  user_id   Int?
  used_at   DateTime? @default(now()) @db.Timestamp(6)
  coupons   coupons?  @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model coupons {
  id               Int             @id @default(autoincrement())
  code             String          @unique @db.VarChar(50)
  discount_percent Int?
  max_usage        Int?
  expires_at       DateTime?       @db.Timestamp(6)
  coupon_usages    coupon_usages[]
}

model order_items {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int?
  price      Decimal?  @db.Decimal(10, 2)
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id               Int           @id @default(autoincrement())
  user_id          Int?
  status           String?       @default("pending") @db.VarChar(50)
  total_amount     Decimal?      @db.Decimal(10, 2)
  shipping_address String?
  created_at       DateTime?     @default(now()) @db.Timestamp(6)
  order_items      order_items[]
  users            users?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments         payments[]
  shippings        shippings[]
}

model payments {
  id             Int       @id @default(autoincrement())
  order_id       Int?
  payment_method String?   @db.VarChar(50)
  status         String?   @default("unpaid") @db.VarChar(50)
  paid_at        DateTime? @db.Timestamp(6)
  orders         orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  slug        String?       @unique @db.VarChar(255)
  description String?
  price       Decimal       @db.Decimal(10, 2)
  stock       Int           @default(0)
  image_url   String?
  category_id Int?
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  cart_items  cart_items[]
  order_items order_items[]
  categories  categories?   @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reviews     reviews[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model reviews {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  product_id Int?
  rating     Int?
  comment    String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  products   products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model shippings {
  id              Int       @id @default(autoincrement())
  order_id        Int?
  tracking_number String?   @db.VarChar(100)
  carrier         String?   @db.VarChar(100)
  shipped_at      DateTime? @db.Timestamp(6)
  delivered_at    DateTime? @db.Timestamp(6)
  orders          orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id            Int             @id @default(autoincrement())
  name          String?         @db.VarChar(100)
  email         String          @unique @db.VarChar(255)
  password      String          @db.VarChar(255)
  phone         String?         @db.VarChar(20)
  address       String?
  role          String?         @default("customer") @db.VarChar(20)
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  status        String?         @db.VarChar
  cart_items    cart_items[]
  coupon_usages coupon_usages[]
  orders        orders[]
  reviews       reviews[]
}
